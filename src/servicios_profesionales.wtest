import Profesional.*
import EmpresaServicio.*
import asociacionProfesionales.*
import ProfesionalLibre.*
import ProfesionalLitoral.*
import ProfesionalVinculado.*
import Universidad.*


test "Profesional estudio en la UBA" {
	
	var profesionalA = new Profesional()
	profesionalA.casaEstudios("Universidad de Buenos Aires")
	assert.equals("Universidad de Buenos Aires",profesionalA.casaEstudios())

}

test "Universidad UBA, profesional Vinculado, provincia habilitada, Buenos Aires" {
	
	var universidadUBA = new Universidad()
	var profesionalA = new ProfesionalVinculado()
	universidadUBA.agregarProfesional(profesionalA)
	universidadUBA.ubicacionProvincia("Buenos Aires")
	universidadUBA.provinciasHabilitadas()
	assert.equals(#{"Buenos Aires"},profesionalA.provinciasHabilitadas())
}



test "Profesional Litoral, provincias habilitadas, Corrientes, Entre Rios, Santa Fe" {

	var profesionalA = new ProfesionalLitoral()
	profesionalA.provinciasHabilitadas()
	assert.equals(#{"Corrientes", "Entre Rios", "Santa Fe"},profesionalA.provinciasHabilitadas())
}

test "Profesional Libre, provincias habilitadas, Santa Cruz y Tierra del Fuego" {
	
	var profesionalA = new ProfesionalLibre()
	profesionalA.provinciasHabilitadas(#{"Santa Cruz", "Tierra del Fuego"})
	assert.equals(#{"Santa Cruz", "Tierra del Fuego"},profesionalA.provinciasHabilitadas())

}


test "Universidad UBA, profesional Vinculado, honorarios de la UBA 2000" {
	
	var universidadUBA = new Universidad()
	var profesionalA = new ProfesionalVinculado()
	universidadUBA.agregarProfesional(profesionalA)
	universidadUBA.honorariosRecomendados(2000)
	assert.equals(2000,profesionalA.honorarios())

}

test "Profesional Litoral, honorarios 3000" {
	
	var profesionalA = new ProfesionalLitoral()
	profesionalA.honorarios(1)
	assert.equals(3000,profesionalA.honorarios())

}


test "Profesional Libre, honorarios 1000" {
	
	var profesionalA = new ProfesionalLibre()
	profesionalA.honorarios(1000)
	assert.equals(1000,profesionalA.honorarios())

}

test "Profesional A, B y C son caros" {

var profesionalA = new ProfesionalVinculado()
var profesionalB = new ProfesionalLitoral()
var profesionalC = new ProfesionalVinculado()
var profesionalD = new ProfesionalLibre()
var universidadUBA = new Universidad()
var universidadRosario = new Universidad()
var empresaServicioA = new EmpresaServicio()


universidadUBA.agregarProfesional(profesionalA)
universidadUBA.honorariosRecomendados(3500)
profesionalA.honorarios()

profesionalB.honorarios(1)

universidadRosario.agregarProfesional(profesionalC)
universidadRosario.honorariosRecomendados(2000)
profesionalC.honorarios()

profesionalD.honorarios(1000)

empresaServicioA.honorarioReferencia(1500)

empresaServicioA.agregarProfesionales(#{profesionalA,profesionalB,profesionalC,profesionalD})
empresaServicioA.agregarUniversidades(#{universidadUBA,universidadRosario})

assert.equals(#{profesionalA, profesionalB,profesionalC},empresaServicioA.profesionalesCaros())

}


test "UBA es una universidad Formadora"{
	
	var profesionalA = new Profesional()
	var empresaServicioA = new EmpresaServicio()
	profesionalA.casaEstudios("Universidad de Buenos Aires")
	empresaServicioA.agregarProfesional(profesionalA)
	assert.equals(#{"Universidad de Buenos Aires"},empresaServicioA.universidadesFormadoras())
}

test "Profesional D es el mas barato" {

var profesionalA = new ProfesionalVinculado()
var profesionalB = new ProfesionalLitoral()
var profesionalC = new ProfesionalVinculado()
var profesionalD = new ProfesionalLibre()
var universidadUBA = new Universidad()
var universidadRosario = new Universidad()
var empresaServicioA = new EmpresaServicio()

universidadUBA.agregarProfesional(profesionalA)
universidadUBA.honorariosRecomendados(3500)
profesionalA.honorarios()

profesionalB.honorarios(1)

universidadRosario.agregarProfesional(profesionalC)
universidadRosario.honorariosRecomendados(2000)
profesionalC.honorarios()

profesionalD.honorarios(1000)

empresaServicioA.honorarioReferencia(1500)
empresaServicioA.agregarProfesionales(#{profesionalA,profesionalB,profesionalC,profesionalD})
empresaServicioA.agregarUniversidades(#{universidadUBA,universidadRosario})
assert.equals(profesionalD,empresaServicioA.profesionalMasBarato())
}

test "Provincia Cubierta: Mendoza"{
	var profesionalA = new ProfesionalLibre()
	var empresaServicioA = new EmpresaServicio()
	profesionalA.provinciasHabilitadas(#{"Mendoza"})
	empresaServicioA.agregarProfesional(profesionalA)
	assert.equals(true,empresaServicioA.provinciaCubierta(#{"Mendoza"}))
}

test "Provincia Cubierta: Del Litoral"{
	var profesionalA = new ProfesionalLitoral()
	var empresaServicioA = new EmpresaServicio()
	empresaServicioA.agregarProfesional(profesionalA)
	assert.equals(true,empresaServicioA.provinciaCubierta(#{"Corrientes", "Entre Rios", "Santa Fe"}))
}

test "Estudio 1 en la UBA"{
	
	var profesionalA = new Profesional()
	var empresaServicioA = new EmpresaServicio()
	profesionalA.casaEstudios("Universidad de Buenos Aires")
	empresaServicioA.agregarProfesional(profesionalA)
	assert.equals(1,empresaServicioA.cantidadProfEstudioEn("Universidad de Buenos Aires"))
}

test "Profesional Caro: Lito"{
	var uniSanMartin = new Universidad()
	var uniRosario = new Universidad()
	var uniCorrientes = new Universidad()
	var uniHurlingham = new Universidad()
	var pManolo = new ProfesionalVinculado()
	var pMelina = new ProfesionalLitoral()
	var pLito = new ProfesionalLibre()
	var pLuciana = new ProfesionalLibre()
		
	uniSanMartin.nombre("Universidad de San Martin")
	uniSanMartin.honorariosRecomendados(3500)
	uniSanMartin.ubicacionProvincia("Buenos Aires")
	
	uniRosario.nombre("Universidad de Rosario")
	uniRosario.agregarProfesional(pManolo)
	uniRosario.honorariosRecomendados(2800)
	uniRosario.ubicacionProvincia("Santa Fe")
	
	uniCorrientes.nombre("Universidad de Corrientes")
	uniCorrientes.honorariosRecomendados(4200)
	uniCorrientes.ubicacionProvincia("Corrientes")
	
	uniHurlingham.nombre("Universidad de Hurlingham")
	uniHurlingham.honorariosRecomendados(8800)
	uniHurlingham.ubicacionProvincia("Buenos Aires")
	
	pManolo.casaEstudios("Universidad de Rosario")
	pManolo.honorarios()

	pMelina.casaEstudios("Universidad de Corrientes")
	pMelina.honorarios(1)
	
	pLito.casaEstudios("Universidad de Hurlingham")
	pLito.honorarios(5000)
	pLito.provinciasHabilitadas(#{"Santa Fe"})
	pLito.provinciasHabilitadas(#{"Cordoba"})
	pLito.provinciasHabilitadas(#{"Buenos Aires"})
	
	pLuciana.casaEstudios("Universidad de Rosario")
	pLuciana.honorarios(3200)
	pLuciana.provinciasHabilitadas(#{"Santa Fe"})
	pLuciana.provinciasHabilitadas(#{"Entre Rios"})

	var empresaServicio = new EmpresaServicio()
	empresaServicio.agregarProfesionales(#{pManolo,pMelina,pLito,pLuciana})
	empresaServicio.agregarUniversidades(#{uniSanMartin,uniRosario,uniCorrientes,uniHurlingham})
	empresaServicio.honorarioReferencia(3500)
	
	assert.equals(#{pLito},empresaServicio.profesionalesCaros())
}


test "Universidades formadoras: Rosario, Corrientes, Hurlingham"{
	var uniSanMartin = new Universidad()
	var uniRosario = new Universidad()
	var uniCorrientes = new Universidad()
	var uniHurlingham = new Universidad()
	var pManolo = new ProfesionalVinculado()
	var pMelina = new ProfesionalLitoral()
	var pLito = new ProfesionalLibre()
	var pLuciana = new ProfesionalLibre()
		
	uniSanMartin.nombre("Universidad de San Martin")
	uniSanMartin.honorariosRecomendados(3500)
	uniSanMartin.ubicacionProvincia("Buenos Aires")
	
	uniRosario.nombre("Universidad de Rosario")
	uniRosario.agregarProfesional(pManolo)
	uniRosario.honorariosRecomendados(2800)
	uniRosario.ubicacionProvincia("Santa Fe")
	
	uniCorrientes.nombre("Universidad de Corrientes")
	uniCorrientes.honorariosRecomendados(4200)
	uniCorrientes.ubicacionProvincia("Corrientes")
	
	uniHurlingham.nombre("Universidad de Hurlingham")
	uniHurlingham.honorariosRecomendados(8800)
	uniHurlingham.ubicacionProvincia("Buenos Aires")
	
	pManolo.casaEstudios("Universidad de Rosario")
	pManolo.honorarios()

	pMelina.casaEstudios("Universidad de Corrientes")
	pMelina.honorarios()
	
	pLito.casaEstudios("Universidad de Hurlingham")
	pLito.honorarios(5000)
	pLito.provinciasHabilitadas(#{"Santa Fe"})
	pLito.provinciasHabilitadas(#{"Cordoba"})
	pLito.provinciasHabilitadas(#{"Buenos Aires"})
	
	pLuciana.casaEstudios("Universidad de Rosario")
	pLuciana.honorarios(3200)
	pLuciana.provinciasHabilitadas(#{"Santa Fe"})
	pLuciana.provinciasHabilitadas(#{"Entre Rios"})

	var empresaServicio = new EmpresaServicio()
	empresaServicio.agregarProfesionales(#{pManolo,pMelina,pLito,pLuciana})
	empresaServicio.agregarUniversidades(#{uniSanMartin,uniRosario,uniCorrientes,uniHurlingham})
	empresaServicio.honorarioReferencia(3500)
	
	assert.equals(#{"Universidad de Rosario", "Universidad de Corrientes", "Universidad de Hurlingham"},empresaServicio.universidadesFormadoras())
}


test "Profesional mas barato: Manolo"{
	var uniSanMartin = new Universidad()
	var uniRosario = new Universidad()
	var uniCorrientes = new Universidad()
	var uniHurlingham = new Universidad()
	var pManolo = new ProfesionalVinculado()
	var pMelina = new ProfesionalLitoral()
	var pLito = new ProfesionalLibre()
	var pLuciana = new ProfesionalLibre()
		
	uniSanMartin.nombre("Universidad de San Martin")
	uniSanMartin.honorariosRecomendados(3500)
	uniSanMartin.ubicacionProvincia("Buenos Aires")
	
	uniRosario.nombre("Universidad de Rosario")
	uniRosario.agregarProfesional(pManolo)
	uniRosario.honorariosRecomendados(2800)
	uniRosario.ubicacionProvincia("Santa Fe")
	
	uniCorrientes.nombre("Universidad de Corrientes")
	uniCorrientes.honorariosRecomendados(4200)
	uniCorrientes.ubicacionProvincia("Corrientes")
	
	uniHurlingham.nombre("Universidad de Hurlingham")
	uniHurlingham.honorariosRecomendados(8800)
	uniHurlingham.ubicacionProvincia("Buenos Aires")
	
	pManolo.casaEstudios("Universidad de Rosario")
	pManolo.honorarios()

	pMelina.casaEstudios("Universidad de Corrientes")
	pMelina.honorarios(1)
	
	pLito.casaEstudios("Universidad de Hurlingham")
	pLito.honorarios(5000)
	pLito.provinciasHabilitadas(#{"Santa Fe"})
	pLito.provinciasHabilitadas(#{"Cordoba"})
	pLito.provinciasHabilitadas(#{"Buenos Aires"})
	
	pLuciana.casaEstudios("Universidad de Rosario")
	pLuciana.honorarios(3200)
	pLuciana.provinciasHabilitadas(#{"Santa Fe"})
	pLuciana.provinciasHabilitadas(#{"Entre Rios"})

	var empresaServicio = new EmpresaServicio()
	empresaServicio.agregarProfesionales(#{pManolo,pMelina,pLito,pLuciana})
	empresaServicio.agregarUniversidades(#{uniSanMartin,uniRosario,uniCorrientes,uniHurlingham})
	empresaServicio.honorarioReferencia(3500)
	assert.equals(pManolo,empresaServicio.profesionalMasBarato())
}

test "2 profesionales estudiaron en Rosario"{
	var uniSanMartin = new Universidad()
	var uniRosario = new Universidad()
	var uniCorrientes = new Universidad()
	var uniHurlingham = new Universidad()
	var pManolo = new ProfesionalVinculado()
	var pMelina = new ProfesionalLitoral()
	var pLito = new ProfesionalLibre()
	var pLuciana = new ProfesionalLibre()
		
	uniSanMartin.nombre("Universidad de San Martin")
	uniSanMartin.honorariosRecomendados(3500)
	uniSanMartin.ubicacionProvincia("Buenos Aires")
	
	uniRosario.nombre("Universidad de Rosario")
	uniRosario.agregarProfesional(pManolo)
	uniRosario.honorariosRecomendados(2800)
	uniRosario.ubicacionProvincia("Santa Fe")
	
	uniCorrientes.nombre("Universidad de Corrientes")
	uniCorrientes.honorariosRecomendados(4200)
	uniCorrientes.ubicacionProvincia("Corrientes")
	
	uniHurlingham.nombre("Universidad de Hurlingham")
	uniHurlingham.honorariosRecomendados(8800)
	uniHurlingham.ubicacionProvincia("Buenos Aires")
	
	pManolo.casaEstudios("Universidad de Rosario")
	pManolo.honorarios()

	pMelina.casaEstudios("Universidad de Corrientes")
	pMelina.honorarios()
	
	pLito.casaEstudios("Universidad de Hurlingham")
	pLito.honorarios(5000)
	pLito.provinciasHabilitadas(#{"Santa Fe"})
	pLito.provinciasHabilitadas(#{"Cordoba"})
	pLito.provinciasHabilitadas(#{"Buenos Aires"})
	
	pLuciana.casaEstudios("Universidad de Rosario")
	pLuciana.honorarios(3200)
	pLuciana.provinciasHabilitadas(#{"Santa Fe"})
	pLuciana.provinciasHabilitadas(#{"Entre Rios"})

	var empresaServicio = new EmpresaServicio()
	empresaServicio.agregarProfesionales(#{pManolo,pMelina,pLito,pLuciana})
	empresaServicio.agregarUniversidades(#{uniSanMartin,uniRosario,uniCorrientes,uniHurlingham})
	empresaServicio.honorarioReferencia(3500)
	assert.equals(2,empresaServicio.cantidadProfEstudioEn("Universidad de Rosario"))
}

test "1 profesional estudio en Hurlingham"{
	var uniSanMartin = new Universidad()
	var uniRosario = new Universidad()
	var uniCorrientes = new Universidad()
	var uniHurlingham = new Universidad()
	var pManolo = new ProfesionalVinculado()
	var pMelina = new ProfesionalLitoral()
	var pLito = new ProfesionalLibre()
	var pLuciana = new ProfesionalLibre()
		
	uniSanMartin.nombre("Universidad de San Martin")
	uniSanMartin.honorariosRecomendados(3500)
	uniSanMartin.ubicacionProvincia("Buenos Aires")
	
	uniRosario.nombre("Universidad de Rosario")
	uniRosario.agregarProfesional(pManolo)
	uniRosario.honorariosRecomendados(2800)
	uniRosario.ubicacionProvincia("Santa Fe")
	
	uniCorrientes.nombre("Universidad de Corrientes")
	uniCorrientes.honorariosRecomendados(4200)
	uniCorrientes.ubicacionProvincia("Corrientes")
	
	uniHurlingham.nombre("Universidad de Hurlingham")
	uniHurlingham.honorariosRecomendados(8800)
	uniHurlingham.ubicacionProvincia("Buenos Aires")
	
	pManolo.casaEstudios("Universidad de Rosario")
	pManolo.honorarios()

	pMelina.casaEstudios("Universidad de Corrientes")
	pMelina.honorarios()
	
	pLito.casaEstudios("Universidad de Hurlingham")
	pLito.honorarios(5000)
	pLito.provinciasHabilitadas(#{"Santa Fe"})
	pLito.provinciasHabilitadas(#{"Cordoba"})
	pLito.provinciasHabilitadas(#{"Buenos Aires"})
	
	pLuciana.casaEstudios("Universidad de Rosario")
	pLuciana.honorarios(3200)
	pLuciana.provinciasHabilitadas(#{"Santa Fe"})
	pLuciana.provinciasHabilitadas(#{"Entre Rios"})

	var empresaServicio = new EmpresaServicio()
	empresaServicio.agregarProfesionales(#{pManolo,pMelina,pLito,pLuciana})
	empresaServicio.agregarUniversidades(#{uniSanMartin,uniRosario,uniCorrientes,uniHurlingham})
	empresaServicio.honorarioReferencia(3500)
	assert.equals(1,empresaServicio.cantidadProfEstudioEn("Universidad de Hurlingham"))
}

test "Ningun profesional estudio en San Martin"{
	var uniSanMartin = new Universidad()
	var uniRosario = new Universidad()
	var uniCorrientes = new Universidad()
	var uniHurlingham = new Universidad()
	var pManolo = new ProfesionalVinculado()
	var pMelina = new ProfesionalLitoral()
	var pLito = new ProfesionalLibre()
	var pLuciana = new ProfesionalLibre()
		
	uniSanMartin.nombre("Universidad de San Martin")
	uniSanMartin.honorariosRecomendados(3500)
	uniSanMartin.ubicacionProvincia("Buenos Aires")
	
	uniRosario.nombre("Universidad de Rosario")
	uniRosario.agregarProfesional(pManolo)
	uniRosario.honorariosRecomendados(2800)
	uniRosario.ubicacionProvincia("Santa Fe")
	
	uniCorrientes.nombre("Universidad de Corrientes")
	uniCorrientes.honorariosRecomendados(4200)
	uniCorrientes.ubicacionProvincia("Corrientes")
	
	uniHurlingham.nombre("Universidad de Hurlingham")
	uniHurlingham.honorariosRecomendados(8800)
	uniHurlingham.ubicacionProvincia("Buenos Aires")
	
	pManolo.casaEstudios("Universidad de Rosario")
	pManolo.honorarios()

	pMelina.casaEstudios("Universidad de Corrientes")
	pMelina.honorarios()
	
	pLito.casaEstudios("Universidad de Hurlingham")
	pLito.honorarios(5000)
	pLito.provinciasHabilitadas(#{"Santa Fe"})
	pLito.provinciasHabilitadas(#{"Cordoba"})
	pLito.provinciasHabilitadas(#{"Buenos Aires"})
	
	pLuciana.casaEstudios("Universidad de Rosario")
	pLuciana.honorarios(3200)
	pLuciana.provinciasHabilitadas(#{"Santa Fe"})
	pLuciana.provinciasHabilitadas(#{"Entre Rios"})

	var empresaServicio = new EmpresaServicio()
	empresaServicio.agregarProfesionales(#{pManolo,pMelina,pLito,pLuciana})
	empresaServicio.agregarUniversidades(#{uniSanMartin,uniRosario,uniCorrientes,uniHurlingham})
	empresaServicio.honorarioReferencia(3500)
	assert.equals(0,empresaServicio.cantidadProfEstudioEn("Universidad de San Martin"))
}

test "donacion vinculado: le quedan $0 y a la universidad la mitad de sus honorarios"{
	var universidadUBA = new Universidad()
	var profesionalA = new ProfesionalVinculado()
	universidadUBA.agregarProfesional(profesionalA)
	universidadUBA.honorariosRecomendados(2000)
	profesionalA.honorarios()
	profesionalA.donar(universidadUBA)
	assert.equals(1000,universidadUBA.donacionesRecibidas())
	assert.equals(0,profesionalA.honorarios())

}

test "donacion litoral"{
	var profesionalA = new ProfesionalLitoral()
	profesionalA.honorarios(1)
	profesionalA.donar(asociacionProfesionales)
	assert.equals(3000,asociacionProfesionales.donacionesRecibidas())
	assert.equals(0,profesionalA.honorarios())
}

test "profesional libre le pasa a otro profesional libre"{
	var profesionalA = new ProfesionalLibre()
	profesionalA.honorarios(5000)
	
	var profesionalB = new ProfesionalLibre()
	profesionalB.honorarios(0)
	
	profesionalA.donar(profesionalB,3000)
	
	assert.equals(2000,profesionalA.totalRecaudado())
	assert.equals(3000,profesionalB.totalRecaudado())
	
}
